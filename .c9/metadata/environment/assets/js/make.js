{"filter":false,"title":"make.js","tooltip":"/assets/js/make.js","undoManager":{"mark":41,"position":41,"stack":[[{"start":{"row":0,"column":0},"end":{"row":0,"column":1},"action":"insert","lines":["l"],"id":42},{"start":{"row":0,"column":1},"end":{"row":0,"column":2},"action":"insert","lines":["e"]},{"start":{"row":0,"column":2},"end":{"row":0,"column":3},"action":"insert","lines":["t"]}],[{"start":{"row":0,"column":3},"end":{"row":0,"column":4},"action":"insert","lines":[" "],"id":43},{"start":{"row":0,"column":4},"end":{"row":0,"column":5},"action":"insert","lines":["s"]},{"start":{"row":0,"column":5},"end":{"row":0,"column":6},"action":"insert","lines":["e"]}],[{"start":{"row":0,"column":6},"end":{"row":0,"column":7},"action":"insert","lines":["w"],"id":44},{"start":{"row":0,"column":7},"end":{"row":0,"column":8},"action":"insert","lines":["u"]},{"start":{"row":0,"column":8},"end":{"row":0,"column":9},"action":"insert","lines":["e"]},{"start":{"row":0,"column":9},"end":{"row":0,"column":10},"action":"insert","lines":["n"]},{"start":{"row":0,"column":10},"end":{"row":0,"column":11},"action":"insert","lines":["c"]},{"start":{"row":0,"column":11},"end":{"row":0,"column":12},"action":"insert","lines":["e"]}],[{"start":{"row":0,"column":11},"end":{"row":0,"column":12},"action":"remove","lines":["e"],"id":45},{"start":{"row":0,"column":10},"end":{"row":0,"column":11},"action":"remove","lines":["c"]},{"start":{"row":0,"column":9},"end":{"row":0,"column":10},"action":"remove","lines":["n"]},{"start":{"row":0,"column":8},"end":{"row":0,"column":9},"action":"remove","lines":["e"]},{"start":{"row":0,"column":7},"end":{"row":0,"column":8},"action":"remove","lines":["u"]},{"start":{"row":0,"column":6},"end":{"row":0,"column":7},"action":"remove","lines":["w"]}],[{"start":{"row":0,"column":6},"end":{"row":0,"column":7},"action":"insert","lines":["q"],"id":46},{"start":{"row":0,"column":7},"end":{"row":0,"column":8},"action":"insert","lines":["u"]},{"start":{"row":0,"column":8},"end":{"row":0,"column":9},"action":"insert","lines":["e"]},{"start":{"row":0,"column":9},"end":{"row":0,"column":10},"action":"insert","lines":["n"]},{"start":{"row":0,"column":10},"end":{"row":0,"column":11},"action":"insert","lines":["c"]},{"start":{"row":0,"column":11},"end":{"row":0,"column":12},"action":"insert","lines":["e"]}],[{"start":{"row":0,"column":12},"end":{"row":0,"column":13},"action":"insert","lines":[" "],"id":47},{"start":{"row":0,"column":13},"end":{"row":0,"column":14},"action":"insert","lines":["="]}],[{"start":{"row":0,"column":14},"end":{"row":0,"column":15},"action":"insert","lines":[" "],"id":48}],[{"start":{"row":0,"column":15},"end":{"row":0,"column":17},"action":"insert","lines":["[]"],"id":49}],[{"start":{"row":0,"column":17},"end":{"row":0,"column":18},"action":"insert","lines":[";"],"id":50}],[{"start":{"row":0,"column":18},"end":{"row":1,"column":0},"action":"insert","lines":["",""],"id":51}],[{"start":{"row":1,"column":0},"end":{"row":2,"column":0},"action":"insert","lines":["",""],"id":52},{"start":{"row":2,"column":0},"end":{"row":2,"column":1},"action":"insert","lines":["w"]},{"start":{"row":2,"column":1},"end":{"row":2,"column":2},"action":"insert","lines":["h"]},{"start":{"row":2,"column":2},"end":{"row":2,"column":3},"action":"insert","lines":["e"]},{"start":{"row":2,"column":3},"end":{"row":2,"column":4},"action":"insert","lines":["n"]}],[{"start":{"row":2,"column":3},"end":{"row":2,"column":4},"action":"remove","lines":["n"],"id":53},{"start":{"row":2,"column":2},"end":{"row":2,"column":3},"action":"remove","lines":["e"]},{"start":{"row":2,"column":1},"end":{"row":2,"column":2},"action":"remove","lines":["h"]},{"start":{"row":2,"column":0},"end":{"row":2,"column":1},"action":"remove","lines":["w"]}],[{"start":{"row":2,"column":0},"end":{"row":2,"column":1},"action":"insert","lines":["w"],"id":54},{"start":{"row":2,"column":1},"end":{"row":2,"column":2},"action":"insert","lines":["h"]},{"start":{"row":2,"column":2},"end":{"row":2,"column":3},"action":"insert","lines":["e"]},{"start":{"row":2,"column":3},"end":{"row":2,"column":4},"action":"insert","lines":["n"]}],[{"start":{"row":2,"column":4},"end":{"row":2,"column":5},"action":"insert","lines":[" "],"id":55}],[{"start":{"row":2,"column":4},"end":{"row":2,"column":5},"action":"remove","lines":[" "],"id":56}],[{"start":{"row":2,"column":4},"end":{"row":2,"column":5},"action":"insert","lines":["."],"id":57},{"start":{"row":2,"column":5},"end":{"row":2,"column":6},"action":"insert","lines":["f"]},{"start":{"row":2,"column":6},"end":{"row":2,"column":7},"action":"insert","lines":["u"]}],[{"start":{"row":2,"column":7},"end":{"row":2,"column":8},"action":"insert","lines":["n"],"id":58},{"start":{"row":2,"column":8},"end":{"row":2,"column":9},"action":"insert","lines":["c"]},{"start":{"row":2,"column":9},"end":{"row":2,"column":10},"action":"insert","lines":["t"]},{"start":{"row":2,"column":10},"end":{"row":2,"column":11},"action":"insert","lines":["i"]},{"start":{"row":2,"column":11},"end":{"row":2,"column":12},"action":"insert","lines":["o"]},{"start":{"row":2,"column":12},"end":{"row":2,"column":13},"action":"insert","lines":["n"]}],[{"start":{"row":2,"column":13},"end":{"row":2,"column":15},"action":"insert","lines":["()"],"id":59}],[{"start":{"row":2,"column":0},"end":{"row":2,"column":15},"action":"remove","lines":["when.function()"],"id":60}],[{"start":{"row":0,"column":0},"end":{"row":2,"column":0},"action":"remove","lines":["let sequence = [];","",""],"id":61},{"start":{"row":0,"column":0},"end":{"row":22,"column":0},"action":"insert","lines":["function polarToCartesian(centerX, centerY, radius, angleInDegrees) {","  var angleInRadians = (angleInDegrees - 90) * Math.PI / 180.0;","","  return {","    x: centerX + (radius * Math.cos(angleInRadians)),","    y: centerY + (radius * Math.sin(angleInRadians))","  };","}","","function describeArc(x, y, radius, startAngle, endAngle) {","","  var start = polarToCartesian(x, y, radius, endAngle);","  var end = polarToCartesian(x, y, radius, startAngle);","","  var arcSweep = endAngle - startAngle <= 180 ? \"0\" : \"1\";","","  var d = [\"M\", start.x, start.y,","    \"A\", radius, radius, 0, arcSweep, 0, end.x, end.y","  ].join(\" \");","","  return d;","}",""]}],[{"start":{"row":22,"column":0},"end":{"row":23,"column":0},"action":"insert","lines":["",""],"id":62}],[{"start":{"row":0,"column":0},"end":{"row":23,"column":0},"action":"remove","lines":["function polarToCartesian(centerX, centerY, radius, angleInDegrees) {","  var angleInRadians = (angleInDegrees - 90) * Math.PI / 180.0;","","  return {","    x: centerX + (radius * Math.cos(angleInRadians)),","    y: centerY + (radius * Math.sin(angleInRadians))","  };","}","","function describeArc(x, y, radius, startAngle, endAngle) {","","  var start = polarToCartesian(x, y, radius, endAngle);","  var end = polarToCartesian(x, y, radius, startAngle);","","  var arcSweep = endAngle - startAngle <= 180 ? \"0\" : \"1\";","","  var d = [\"M\", start.x, start.y,","    \"A\", radius, radius, 0, arcSweep, 0, end.x, end.y","  ].join(\" \");","","  return d;","}","",""],"id":64}],[{"start":{"row":0,"column":0},"end":{"row":13,"column":13},"action":"insert","lines":["var canvas = document.getElementById('demoCanvas');","var ctx = canvas.getContext('2d');","var x = 90;","var y = 100;","var radius = 75;","var startAngle = 1.1 * Math.PI;","var endAngle = 1.9 * Math.PI;","var counterClockwise = false;","ctx.beginPath();","ctx.arc(x, y, radius, startAngle, endAngle, counterClockwise);","ctx.lineWidth = 10;","// line color","ctx.strokeStyle = 'green';","ctx.stroke();"],"id":65}],[{"start":{"row":0,"column":0},"end":{"row":0,"column":30},"action":"insert","lines":["$(document).ready(function() {"],"id":67}],[{"start":{"row":0,"column":30},"end":{"row":1,"column":0},"action":"insert","lines":["",""],"id":68},{"start":{"row":1,"column":0},"end":{"row":1,"column":2},"action":"insert","lines":["  "]}],[{"start":{"row":14,"column":13},"end":{"row":15,"column":0},"action":"insert","lines":["",""],"id":69},{"start":{"row":15,"column":0},"end":{"row":15,"column":1},"action":"insert","lines":["}"]}],[{"start":{"row":0,"column":0},"end":{"row":15,"column":1},"action":"remove","lines":["$(document).ready(function() {","  var canvas = document.getElementById('demoCanvas');","var ctx = canvas.getContext('2d');","var x = 90;","var y = 100;","var radius = 75;","var startAngle = 1.1 * Math.PI;","var endAngle = 1.9 * Math.PI;","var counterClockwise = false;","ctx.beginPath();","ctx.arc(x, y, radius, startAngle, endAngle, counterClockwise);","ctx.lineWidth = 10;","// line color","ctx.strokeStyle = 'green';","ctx.stroke();","}"],"id":70},{"start":{"row":0,"column":0},"end":{"row":276,"column":2},"action":"insert","lines":["// Functions to draw Simon arc buttons","function polarToCartesian(centerX, centerY, radius, angleInDegrees) {","  var angleInRadians = (angleInDegrees - 90) * Math.PI / 180.0;","","  return {","    x: centerX + (radius * Math.cos(angleInRadians)),","    y: centerY + (radius * Math.sin(angleInRadians))","  };","}","","function describeArc(x, y, radius, startAngle, endAngle) {","","  var start = polarToCartesian(x, y, radius, endAngle);","  var end = polarToCartesian(x, y, radius, startAngle);","","  var arcSweep = endAngle - startAngle <= 180 ? \"0\" : \"1\";","","  var d = [\"M\", start.x, start.y,","    \"A\", radius, radius, 0, arcSweep, 0, end.x, end.y","  ].join(\" \");","","  return d;","}","","$(document).ready(function() {","  ","  // Initialize game settings","  var gameRunning = false;","  var gameOn = false;","  var gameArray = [];","","  // Get button variables","  var arcButtons = $('svg.thing > path');","  var startButton = $('svg.thing > #start');","  var strictButton = $('svg.thing > #strict');","  var strictIndicator = $('svg.thing > #strictInd');","","  arcButtons.attr('class', 'unclickable');","  startButton.attr('class', 'unclickable');","  strictButton.attr('class', 'unclickable');","  ","  // Keep track of how many button have been displayed","  var buttonsDisplayed;","","  // Time interval variable","  var interval;","","  // User turn flag","  var userTurn = false;","  var userArray = [];","","  var strictMode = false;","","  // Audio","  var redAudio = new Audio('https://s3.amazonaws.com/freecodecamp/simonSound1.mp3');","  var blueAudio = new Audio('https://s3.amazonaws.com/freecodecamp/simonSound2.mp3');","  var yellowAudio = new Audio('https://s3.amazonaws.com/freecodecamp/simonSound3.mp3');","  var greenAudio = new Audio('https://s3.amazonaws.com/freecodecamp/simonSound4.mp3');","","  // Draw arc buttons","  document.getElementById(\"1\").setAttribute(\"d\", describeArc(250, 250, 165, 0, 90));","","  document.getElementById(\"2\").setAttribute(\"d\", describeArc(250, 250, 165, 90, 180));","","  document.getElementById(\"3\").setAttribute(\"d\", describeArc(250, 250, 165, 180, 270));","","  document.getElementById(\"4\").setAttribute(\"d\", describeArc(250, 250, 165, 270, 360));","","  // On start button click, start update game array","  startButton.on(\"click\", function() {","    resetGame();","    gameRunning = true;","    updateGameArray();","  });","","  // On strict button click, make strict mode true","  strictButton.on(\"click\", function() {","    strictMode = !strictMode;","    if (strictMode) {","      strictIndicator.attr('fill', 'red');","    } else {","      strictIndicator.attr('fill', 'black');","    }","  });","  ","  // Turning on/off game (off: all buttons are unclickable)","  $('input').on('click', function() {","    if ($('input').prop('checked')) {","      gameOn = true;","      $('#counter').attr('fill','red');","      startButton.attr('class', 'clickable');","      strictButton.attr('class', 'clickable');","    } else {","      resetGame();","      gameOn = false;","      $('#counter').attr('fill','darkred');","      arcButtons.attr('class', 'unclickable');","      startButton.attr('class', 'unclickable');","      strictButton.attr('class', 'unclickable');","      ","      // Update counter display to double-hyphen","      $('#counter').html('--').attr('font-size','4rem').attr('x','174').attr('y','275');","    }","  })","","  // Resets game ready for gameplay by clearing user array, game array, and counter","  function resetGame() {","    $('#counter').attr('font-size', '2.5rem').attr('x', '176').attr('y', '273');","    $('#counter').html('00');","    userTurn = false;","    userArray = [];","    gameArray = [];","    gameRunning = false;","  }","","  // Add random button to gamearray by adding a random 1-4 'button'","  function updateGameArray() {","    userArray = [];","    var randButton = randomIntFromInterval(1, 4);","    gameArray.push(randButton);","    displayGameButtons();","  }","","  // Display game buttons (light and color) from game array with 1 second delay between","  function displayGameButtons() {","    arcButtons.attr(\"class\", 'unclickable');","    buttonDisplayed = 1;","    interval = setInterval(displayGameArray, 1000);","  }","","  // Displays all of the buttons from a game array","  function displayGameArray() {","    if (buttonDisplayed >= gameArray.length) {","      clearInterval(interval);","      userTurn = true;","      arcButtons.attr('class', 'clickable');","      console.log(userTurn);","    }","    ","    displayButton(gameArray[buttonDisplayed - 1], true);","    ","    if (buttonDisplayed === 1) {","      $('#counter').html(('0' + gameArray.length).slice(-2));","    }","    ","    buttonDisplayed++;","    console.log(gameArray);","  }","","  // Clears button back to original color","  function clearButton(button) {","    switch (button) {","      case 1:","        $('#1').attr(\"stroke\", \"#bb0000\");","        break;","      case 2:","        $('#2').attr(\"stroke\", \"#0000b0\");","        break;","      case 3:","        $('#3').attr(\"stroke\", \"#bbbb00\");","        break;","      case 4:","        $('#4').attr(\"stroke\", \"#008000\");","        break;","    }","  }","","  // Displays individual button and sound (auto clears if game is displaying button)","  function displayButton(button, autoClear) {","","    switch (button) {","      case 1:","        $('#1').attr(\"stroke\", \"red\");","        redAudio.play();","        if (autoClear) {","          setTimeout(function() {","            clearButton(button);","          }, 800);","        }","        break;","      case 2:","        $('#2').attr(\"stroke\", \"blue\");","        blueAudio.play();","        if (autoClear) {","          setTimeout(function() {","            clearButton(button);","          }, 800);","        }","        break;","      case 3:","        $('#3').attr(\"stroke\", \"yellow\");","        yellowAudio.play();","        if (autoClear) {","          setTimeout(function() {","            clearButton(button);","          }, 800);","        }","        break;","      case 4:","        $('#4').attr(\"stroke\", \"#00ff00\");","        greenAudio.play();","        if (autoClear) {","          setTimeout(function() {","            clearButton(button);","          }, 800);","        }","        break;","    }","","  }","","  // Compares user and game array for every user input to determine if user selected wrong button","  // If user correct, update game array with next random button","  // If user wrong and not strict mode, then repeat buttons sequence","  // If user wrong and strict mode, then game over","  function compareArrays() {","    userTurn = false;","","    console.log('userarray', userArray);","    console.log('gamearray', gameArray);","","    for (var i = 0; i < userArray.length; i++) {","      if (userArray[i] !== gameArray[i]) {","        ","        if (strictMode) {","          resetGame();","          displayWrong();","          gameRunning = true;","          updateGameArray();","        } else {","          userArray = [];","          displayWrong();","          displayGameButtons();","        }","      }","    }","","    if (userArray.length >= 20) {","      alert('you win!!!');","      resetGame();","      gameRunning = true;","      updateGameArray();","    }","    ","    if (gameRunning && userArray.length === gameArray.length) {","      updateGameArray();","    }","    ","  }","","  // If user wrong, display that they were wrong.","  function displayWrong() {","    $('#counter').html('!!!');","    setTimeout(function() {","      $('#counter').html(('0' + gameArray.length).slice(-2));;","    }, 1000);","  }","","  function randomIntFromInterval(min, max) {","    return Math.floor(Math.random() * (max - min + 1) + min);","  }","","  // You can only press buttons after game array has been displayed to user","  // Upon button press, lightup button and sound","  arcButtons.on(\"mousedown\", function() {","    userArray.push(parseInt($(this).attr(\"id\")));","    displayButton(parseInt($(this).attr(\"id\")), false);","  });","","  // Upon button release, turn off light and sound","  arcButtons.on(\"mouseup\", function() {","    clearButton(parseInt($(this).attr(\"id\")));","    compareArrays();","  });","","","})"]}],[{"start":{"row":0,"column":0},"end":{"row":276,"column":2},"action":"remove","lines":["// Functions to draw Simon arc buttons","function polarToCartesian(centerX, centerY, radius, angleInDegrees) {","  var angleInRadians = (angleInDegrees - 90) * Math.PI / 180.0;","","  return {","    x: centerX + (radius * Math.cos(angleInRadians)),","    y: centerY + (radius * Math.sin(angleInRadians))","  };","}","","function describeArc(x, y, radius, startAngle, endAngle) {","","  var start = polarToCartesian(x, y, radius, endAngle);","  var end = polarToCartesian(x, y, radius, startAngle);","","  var arcSweep = endAngle - startAngle <= 180 ? \"0\" : \"1\";","","  var d = [\"M\", start.x, start.y,","    \"A\", radius, radius, 0, arcSweep, 0, end.x, end.y","  ].join(\" \");","","  return d;","}","","$(document).ready(function() {","  ","  // Initialize game settings","  var gameRunning = false;","  var gameOn = false;","  var gameArray = [];","","  // Get button variables","  var arcButtons = $('svg.thing > path');","  var startButton = $('svg.thing > #start');","  var strictButton = $('svg.thing > #strict');","  var strictIndicator = $('svg.thing > #strictInd');","","  arcButtons.attr('class', 'unclickable');","  startButton.attr('class', 'unclickable');","  strictButton.attr('class', 'unclickable');","  ","  // Keep track of how many button have been displayed","  var buttonsDisplayed;","","  // Time interval variable","  var interval;","","  // User turn flag","  var userTurn = false;","  var userArray = [];","","  var strictMode = false;","","  // Audio","  var redAudio = new Audio('https://s3.amazonaws.com/freecodecamp/simonSound1.mp3');","  var blueAudio = new Audio('https://s3.amazonaws.com/freecodecamp/simonSound2.mp3');","  var yellowAudio = new Audio('https://s3.amazonaws.com/freecodecamp/simonSound3.mp3');","  var greenAudio = new Audio('https://s3.amazonaws.com/freecodecamp/simonSound4.mp3');","","  // Draw arc buttons","  document.getElementById(\"1\").setAttribute(\"d\", describeArc(250, 250, 165, 0, 90));","","  document.getElementById(\"2\").setAttribute(\"d\", describeArc(250, 250, 165, 90, 180));","","  document.getElementById(\"3\").setAttribute(\"d\", describeArc(250, 250, 165, 180, 270));","","  document.getElementById(\"4\").setAttribute(\"d\", describeArc(250, 250, 165, 270, 360));","","  // On start button click, start update game array","  startButton.on(\"click\", function() {","    resetGame();","    gameRunning = true;","    updateGameArray();","  });","","  // On strict button click, make strict mode true","  strictButton.on(\"click\", function() {","    strictMode = !strictMode;","    if (strictMode) {","      strictIndicator.attr('fill', 'red');","    } else {","      strictIndicator.attr('fill', 'black');","    }","  });","  ","  // Turning on/off game (off: all buttons are unclickable)","  $('input').on('click', function() {","    if ($('input').prop('checked')) {","      gameOn = true;","      $('#counter').attr('fill','red');","      startButton.attr('class', 'clickable');","      strictButton.attr('class', 'clickable');","    } else {","      resetGame();","      gameOn = false;","      $('#counter').attr('fill','darkred');","      arcButtons.attr('class', 'unclickable');","      startButton.attr('class', 'unclickable');","      strictButton.attr('class', 'unclickable');","      ","      // Update counter display to double-hyphen","      $('#counter').html('--').attr('font-size','4rem').attr('x','174').attr('y','275');","    }","  })","","  // Resets game ready for gameplay by clearing user array, game array, and counter","  function resetGame() {","    $('#counter').attr('font-size', '2.5rem').attr('x', '176').attr('y', '273');","    $('#counter').html('00');","    userTurn = false;","    userArray = [];","    gameArray = [];","    gameRunning = false;","  }","","  // Add random button to gamearray by adding a random 1-4 'button'","  function updateGameArray() {","    userArray = [];","    var randButton = randomIntFromInterval(1, 4);","    gameArray.push(randButton);","    displayGameButtons();","  }","","  // Display game buttons (light and color) from game array with 1 second delay between","  function displayGameButtons() {","    arcButtons.attr(\"class\", 'unclickable');","    buttonDisplayed = 1;","    interval = setInterval(displayGameArray, 1000);","  }","","  // Displays all of the buttons from a game array","  function displayGameArray() {","    if (buttonDisplayed >= gameArray.length) {","      clearInterval(interval);","      userTurn = true;","      arcButtons.attr('class', 'clickable');","      console.log(userTurn);","    }","    ","    displayButton(gameArray[buttonDisplayed - 1], true);","    ","    if (buttonDisplayed === 1) {","      $('#counter').html(('0' + gameArray.length).slice(-2));","    }","    ","    buttonDisplayed++;","    console.log(gameArray);","  }","","  // Clears button back to original color","  function clearButton(button) {","    switch (button) {","      case 1:","        $('#1').attr(\"stroke\", \"#bb0000\");","        break;","      case 2:","        $('#2').attr(\"stroke\", \"#0000b0\");","        break;","      case 3:","        $('#3').attr(\"stroke\", \"#bbbb00\");","        break;","      case 4:","        $('#4').attr(\"stroke\", \"#008000\");","        break;","    }","  }","","  // Displays individual button and sound (auto clears if game is displaying button)","  function displayButton(button, autoClear) {","","    switch (button) {","      case 1:","        $('#1').attr(\"stroke\", \"red\");","        redAudio.play();","        if (autoClear) {","          setTimeout(function() {","            clearButton(button);","          }, 800);","        }","        break;","      case 2:","        $('#2').attr(\"stroke\", \"blue\");","        blueAudio.play();","        if (autoClear) {","          setTimeout(function() {","            clearButton(button);","          }, 800);","        }","        break;","      case 3:","        $('#3').attr(\"stroke\", \"yellow\");","        yellowAudio.play();","        if (autoClear) {","          setTimeout(function() {","            clearButton(button);","          }, 800);","        }","        break;","      case 4:","        $('#4').attr(\"stroke\", \"#00ff00\");","        greenAudio.play();","        if (autoClear) {","          setTimeout(function() {","            clearButton(button);","          }, 800);","        }","        break;","    }","","  }","","  // Compares user and game array for every user input to determine if user selected wrong button","  // If user correct, update game array with next random button","  // If user wrong and not strict mode, then repeat buttons sequence","  // If user wrong and strict mode, then game over","  function compareArrays() {","    userTurn = false;","","    console.log('userarray', userArray);","    console.log('gamearray', gameArray);","","    for (var i = 0; i < userArray.length; i++) {","      if (userArray[i] !== gameArray[i]) {","        ","        if (strictMode) {","          resetGame();","          displayWrong();","          gameRunning = true;","          updateGameArray();","        } else {","          userArray = [];","          displayWrong();","          displayGameButtons();","        }","      }","    }","","    if (userArray.length >= 20) {","      alert('you win!!!');","      resetGame();","      gameRunning = true;","      updateGameArray();","    }","    ","    if (gameRunning && userArray.length === gameArray.length) {","      updateGameArray();","    }","    ","  }","","  // If user wrong, display that they were wrong.","  function displayWrong() {","    $('#counter').html('!!!');","    setTimeout(function() {","      $('#counter').html(('0' + gameArray.length).slice(-2));;","    }, 1000);","  }","","  function randomIntFromInterval(min, max) {","    return Math.floor(Math.random() * (max - min + 1) + min);","  }","","  // You can only press buttons after game array has been displayed to user","  // Upon button press, lightup button and sound","  arcButtons.on(\"mousedown\", function() {","    userArray.push(parseInt($(this).attr(\"id\")));","    displayButton(parseInt($(this).attr(\"id\")), false);","  });","","  // Upon button release, turn off light and sound","  arcButtons.on(\"mouseup\", function() {","    clearButton(parseInt($(this).attr(\"id\")));","    compareArrays();","  });","","","})"],"id":71},{"start":{"row":0,"column":0},"end":{"row":15,"column":1},"action":"insert","lines":["function draw()","  {","var canvas = document.getElementById('circle');","if (canvas.getContext)","{","var ctx = canvas.getContext('2d'); ","var X = canvas.width / 2;","var Y = canvas.height / 2;","var R = 45;","ctx.beginPath();","ctx.arc(X, Y, R, 0, 2 * Math.PI, false);","ctx.lineWidth = 3;","ctx.strokeStyle = '#FF0000';","ctx.stroke();","}","}"]}],[{"start":{"row":10,"column":17},"end":{"row":10,"column":18},"action":"remove","lines":["0"],"id":72}],[{"start":{"row":10,"column":17},"end":{"row":10,"column":18},"action":"insert","lines":["2"],"id":73}],[{"start":{"row":10,"column":17},"end":{"row":10,"column":18},"action":"remove","lines":["2"],"id":74}],[{"start":{"row":10,"column":17},"end":{"row":10,"column":18},"action":"insert","lines":["3"],"id":75}],[{"start":{"row":10,"column":17},"end":{"row":10,"column":18},"action":"remove","lines":["3"],"id":76}],[{"start":{"row":10,"column":17},"end":{"row":10,"column":18},"action":"insert","lines":["4"],"id":77}],[{"start":{"row":10,"column":17},"end":{"row":10,"column":18},"action":"remove","lines":["4"],"id":78}],[{"start":{"row":10,"column":17},"end":{"row":10,"column":18},"action":"insert","lines":["5"],"id":79}],[{"start":{"row":10,"column":17},"end":{"row":10,"column":18},"action":"remove","lines":["5"],"id":80}],[{"start":{"row":10,"column":17},"end":{"row":10,"column":18},"action":"insert","lines":["4"],"id":81},{"start":{"row":10,"column":18},"end":{"row":10,"column":19},"action":"insert","lines":["."]},{"start":{"row":10,"column":19},"end":{"row":10,"column":20},"action":"insert","lines":["5"]}],[{"start":{"row":11,"column":16},"end":{"row":11,"column":17},"action":"remove","lines":["3"],"id":82}],[{"start":{"row":11,"column":16},"end":{"row":11,"column":17},"action":"insert","lines":["8"],"id":83}],[{"start":{"row":11,"column":16},"end":{"row":11,"column":17},"action":"remove","lines":["8"],"id":84}],[{"start":{"row":11,"column":16},"end":{"row":11,"column":17},"action":"insert","lines":["1"],"id":85},{"start":{"row":11,"column":17},"end":{"row":11,"column":18},"action":"insert","lines":["6"]}]]},"ace":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":9,"column":0},"end":{"row":15,"column":1},"isBackwards":true},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1568726414847,"hash":"ab0a7805cc0a60cf88c4fa9da9b977ad4c6bde94"}